{"version":3,"sources":["components/navbar.js","components/cover.js","components/image.js","components/container.js","components/footer.js","index.js"],"names":["NavBar","_ref","score","topScore","message","react_default","a","createElement","className","href","Cover","src","alt","ImageCard","backgroundColor","selectedCharacter","onImageClick","concat","onClick","Container","colors","characters","Colors","map","color","index","components_image","key","Footer","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","info","selectedCharacters","setState","_","shuffle","currentScore","currentTopScore","name","_this2","delay","_this3","indexOf","push","topScoreUpdater","length","shuffleCharacters","checkForDuplicate","_this4","navbar","cover","container","handleSelectCharacters","footer","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f60d91c8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst NavBar = ({ score, topScore, message }) => {\r\n\treturn (\r\n\t\t<div className='navbar-fixed'>\r\n\t\t\t<nav>\r\n\t\t\t\t<div className='nav-wrapper row black center-align flow-text'>\r\n\t\t\t\t\t<div className='col s4'>\r\n\t\t\t\t\t\t<a href='/'><b className='red-text'>Clicky Game</b></a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='col s4'>\r\n\t\t\t\t\t\t<span>{message}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='col s4'>\r\n\t\t\t\t\t\t<span className='red-text'>Score: {score} | Top Score: {topScore}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</nav>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default NavBar;","import React from 'react';\r\n\r\nconst Cover = () => {\r\n\treturn (\r\n\t\t<div className='parallax-container center-align valign-wrapper'>\r\n\t\t\t<div className='section no-pad-bot'>\r\n\t\t\t\t<div className='container'>\r\n\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t<h2 className='header col s12 light'>Don't click on any image more than once!</h2>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='parallax'>\r\n\t\t\t\t<img src='assets/img/cover.jpg' alt='Cover' />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Cover;","import React from 'react';\r\n\r\nconst ImageCard = ({ backgroundColor, selectedCharacter, onImageClick }) => {\r\n\treturn (\r\n\t\t<div className='col s3'>\r\n\t\t\t<div className={`card hoverable ${backgroundColor} lighten-3`} onClick={() => { onImageClick(selectedCharacter) }}>\r\n\t\t\t\t<div className='card-image'>\r\n\t\t\t\t\t<img src={`../assets/img/${selectedCharacter}`} alt='Characters' />\r\n\t\t\t\t</div> \r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ImageCard;","import React from 'react';\r\nimport ImageCards from './image';\r\n\r\nconst Container = ({ colors, characters, onImageClick }) => {\r\n\tconst Colors = colors.map((color, index) => {\r\n\t\treturn (\r\n\t\t\t<ImageCards\r\n\t\t\t\tkey={color}\r\n\t\t\t\tbackgroundColor={color}\r\n\t\t\t\tselectedCharacter={characters[index]}\r\n\t\t\t\tonImageClick={onImageClick}\r\n\t\t\t/>\r\n\t\t)\r\n\t})\r\n\treturn (\r\n\t\t<div className='container'>\r\n\t\t\t<div className='row flow-text'>\r\n\t\t\t\t{Colors}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Container;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n\treturn (\r\n\t\t<footer className='page-footer black'>\r\n\t\t\t<div className='container'>\r\n\t\t\t\r\n\t\t\t</div>\r\n\t\t\t<div className='footer-copyright'>\r\n\t\t\t\t<div className='container'>\r\n\t\t\t\t\t<span className='red-text'>Â© 2019 Zach Alaywan</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n\t);\r\n};\r\n\r\nexport default Footer;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport _ from 'lodash';\n\nimport NavBar from './components/navbar';\nimport Cover from './components/cover';\nimport Container from './components/container';\nimport Footer from './components/footer';\n\nconst characters = ['image1.png', 'image2.PNG', 'image3', 'image4', 'image5', 'image6', 'image7', 'image8', 'image9', 'image10', 'image11', 'image12',];\n\nconst colors = ['yellow', 'purple', 'magenta', 'indigo', 'red','blue', 'light-blue', 'neon-green', 'teal', 'green', 'light-green', 'fuschia',];\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tinfo: 'Begin By Clicking an Image Card',\n\t\t\tscore: 0,\n\t\t\ttopScore: 0,\n\t\t\tcharacters: characters,\n\t\t\tselectedCharacters: []\n\t\t};\n\t};\n\n\tshuffleCharacters() {\n\t\tthis.setState({ characters: _.shuffle(characters) });\n\t};\n\n\ttopScoreUpdater(currentScore, currentTopScore, name) {\n\t\tcurrentScore++;\n\t\t_.delay(() => {\n\t\t\tthis.setState({ info: 'Choose your next Landmark!' });\n\t\t}, 500);\n\t\tif (currentScore >= currentTopScore) {\n\t\t\treturn this.setState({ score: currentScore, topScore: currentScore, info: `${name} Correct!` });\n\t\t};\n\t\treturn this.setState({ score: currentScore, info: `${name} Correct!` });\n\t};\n\n\tcheckForDuplicate(name) {\n\t\tif (this.state.selectedCharacters.indexOf(name) === -1) {\n\t\t\tthis.state.selectedCharacters.push(name);\n\t\t\tthis.topScoreUpdater(this.state.score, this.state.topScore, name);\n\t\t\tif (this.state.selectedCharacters.length === characters.length) {\n\t\t\t\tthis.setState({ selectedCharacters: [] });\n\t\t\t};\n\t\t} else {\n\t\t\t_.delay(() => {\n\t\t\t\tthis.setState({ info: 'Try Again!' });\n\t\t\t}, 500);\n\t\t\tthis.setState({ score: 0, selectedCharacters: [], info: `${name} Duplicate!` });\n\t\t}\n\t\tthis.shuffleCharacters();\n\t};\n\n\thandleSelectCharacters(name) {\n\t\tthis.checkForDuplicate(name);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<NavBar\n\t\t\t\t\tscore={this.state.score}\n\t\t\t\t\ttopScore={this.state.topScore}\n\t\t\t\t\tmessage={this.state.info}\n\t\t\t\t/>\n\t\t\t\t<Cover />\n\t\t\t\t<div className=\"row\"></div>\n\t\t\t\t<Container\n\t\t\t\t\tcolors={colors}\n\t\t\t\t\tcharacters={this.state.characters}\n\t\t\t\t\tonImageClick={name => { this.handleSelectCharacters(name) }}\n\t\t\t\t/>\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t);\n\t};\n};\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}